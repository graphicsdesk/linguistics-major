{"version":3,"sources":["../node_modules/enter-view/enter-view.min.js","../node_modules/text-balancer/text-balancer.js","../config.yml","script.js"],"names":["module","exports","USE_COVER_HED","DOC_URL","navbar","document","getElementById","hamburgerTrigger","classList","toggle","textBalancer","balanceText"],"mappings":"AEAAA,ADAA,MCAM,CAACC,OAAP,GAAiB;AAACC,AFAlB,ACCA,ECDkBA,aAAa,EAAE,KAAhB;AAAuBC,ADExC,ECFwCA,OAAO,EAAE;AAAhC,ADGjB,CCHA;ADIA;AACA;AACA;AACA,AEPA;AFQA;AACA,AERA;AFSA;AACA,AERA;AFSA;AACA;AACA;AACA,AEVA;AFWA,AETA,IAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf,EAEA;AFQA;AACA,AEPO,SAASC,gBAAT,GAA4B;AFQnC,AEPEH,EAAAA,MAAM,CAACI,SAAP,CAAiBC,MAAjB,CAAwB,gBAAxB;AFQF,AEPC,EAED;AFMA;AACA;AACA,AENAC,sBAAaC,WAAb,CAAyB,iDAAzfile":"script.75da7f30.js","sourceRoot":"../src","sourcesContent":["\"use strict\";!function(e){\"function\"==typeof define&&define.amd?define(e):\"undefined\"!=typeof module&&module.exports?module.exports=e():window.enterView=e.call(this)}(function(){var e=function(e){function n(){E=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||function(e){return setTimeout(e,1e3/60)}}function t(){if(y&&\"number\"==typeof y){var e=Math.min(Math.max(0,y),1);return F-e*F}return F}function o(){var e=document.documentElement.clientHeight,n=window.innerHeight||0;F=Math.max(e,n)}function r(){L=!1;var e=t();M=M.filter(function(n){var t=n.getBoundingClientRect(),o=t.top,r=t.bottom,i=t.height,s=o<e,u=r<e;if(s&&!n.__ev_entered){if(m(n),n.__ev_progress=0,h(n,n.__ev_progress),q)return!1}else!s&&n.__ev_entered&&(n.__ev_progress=0,h(n,n.__ev_progress),g(n));if(s&&!u){var d=(e-o)/i;n.__ev_progress=Math.min(1,Math.max(0,d)),h(n,n.__ev_progress)}return s&&u&&1!==n.__ev_progress&&(n.__ev_progress=1,h(n,n.__ev_progress)),n.__ev_entered=s,!0}),M.length||window.removeEventListener(\"scroll\",i,!0)}function i(){L||(L=!0,E(r))}function s(){o(),r()}function u(){o(),r()}function d(e){for(var n=e.length,t=[],o=0;o<n;o+=1)t.push(e[o]);return t}function f(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return\"string\"==typeof e?d(n.querySelectorAll(e)):e instanceof NodeList?d(e):e instanceof Array?e:void 0}function c(){M=f(v)}function a(){window.addEventListener(\"resize\",s,!0),window.addEventListener(\"scroll\",i,!0),window.addEventListener(\"load\",u,!0),s()}function _(){return v?(c(),M&&M.length?(n(),a(),void r()):(console.error(\"no selector elements found\"),!1)):(console.error(\"must pass a selector\"),!1)}var v=e.selector,l=e.enter,m=void 0===l?function(){}:l,w=e.exit,g=void 0===w?function(){}:w,p=e.progress,h=void 0===p?function(){}:p,x=e.offset,y=void 0===x?0:x,A=e.once,q=void 0!==A&&A,E=null,L=!1,M=[],F=0;_()};return e});","var candidates = [];\n\n// pass in a string of selectors to be balanced.\n// if you didnt specify any, thats ok! We'll just\n// balance anything with the balance-text class\nvar textBalancer = function (selectors) {\n\n    if (!selectors) {\n        candidates = document.querySelectorAll('.balance-text');\n    } else {\n        createSelectors(selectors);\n    }\n\n    balanceText();\n\n    var rebalanceText = debounce(function() {\n        balanceText();\n    }, 100);\n\n    window.addEventListener('resize', rebalanceText);\n}\n\n// this populates our candidates array with dom objects\n// that need to be balanced\nvar createSelectors = function(selectors) {\n    selectorArray = selectors.split(',');\n    for (var i = 0; i < selectorArray.length; i += 1) {\n        var currentSelectorElements = document.querySelectorAll(selectorArray[i].trim());\n\n        for (var j = 0; j < currentSelectorElements.length; j += 1) {\n            var currentSelectorElement = currentSelectorElements[j];\n            candidates.push(currentSelectorElement);\n        }\n    }\n}\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nvar debounce = function (func, wait, immediate) {\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};\n\n\n// HELPER FUNCTION -- initializes recursive binary search\nvar balanceText = function () {\n    var element;\n    var i;\n\n    for (i = 0; i < candidates.length; i += 1) {\n        element = candidates[i];\n\n        if (textElementIsMultipleLines(element)) {\n            element.style.maxWidth = '';\n            squeezeContainer(element, element.clientHeight, 0, element.clientWidth);\n        }\n\n    }\n\n}\n\n// Make the element as narrow as possible while maintaining its current height (number of lines). Binary search.\nvar squeezeContainer = function (element, originalHeight, bottomRange, topRange) {\n    var mid;\n    if (bottomRange >= topRange) {\n        element.style.maxWidth = topRange + 'px';\n        return;\n    }\n    mid = (bottomRange + topRange) / 2;\n    element.style.maxWidth = mid + 'px';\n\n    if (element.clientHeight > originalHeight) {\n        // we've squoze too far and element has spilled onto an additional line; recurse on wider range\n        squeezeContainer(element, originalHeight, mid+1, topRange);\n    } else {\n        // element has not wrapped to another line; keep squeezing!\n        squeezeContainer(element, originalHeight, bottomRange+1, mid);\n    }\n}\n\n// function to see if a headline is multiple lines\n// we only want to break if the headline is multiple lines\n//\n// We achieve this by turning the first word into a span\n// and then we compare the height of that span to the height\n// of the entire headline. If the headline is bigger than the\n// span by 10px we balance the headline.\nvar textElementIsMultipleLines = function (element) {\n    var firstWordHeight;\n    var elementHeight;\n    var HEIGHT_OFFSET;\n    var elementWords;\n    var firstWord;\n    var ORIGINAL_ELEMENT_TEXT;\n\n    ORIGINAL_ELEMENT_TEXT = element.innerHTML;\n\n    // usually there is around a 5px discrepency between\n    // the first word and the height of the whole headline\n    // so subtract the height of the headline by 10 px and\n    // we should be good\n    HEIGHT_OFFSET = 10;\n\n    // get all the words in the headline as\n    // an array -- will include punctuation\n    //\n    // this is used to put the headline back together\n    elementWords = element.innerHTML.split(' ');\n\n    // make span for first word and give it an id\n    // so we can access it in le dom\n    firstWord = document.createElement('span');\n    firstWord.id = 'element-first-word';\n    firstWord.innerHTML = elementWords[0];\n\n    // this is the entire headline\n    // as an array except for first word\n    //\n    // we will append it to the headline after the span\n    elementWords = elementWords.slice(1);\n\n    // empty the headline and append the span to it\n    element.innerHTML = '';\n    element.appendChild(firstWord);\n\n    // add the rest of the element back to it\n    element.innerHTML += ' ' + elementWords.join(' ');\n\n    // update the first word variable in the dom\n    firstWord = document.getElementById('element-first-word');\n\n    firstWordHeight = firstWord.offsetHeight;\n    elementHeight = element.offsetHeight;\n    // restore the original element text\n    element.innerHTML = ORIGINAL_ELEMENT_TEXT;\n\n    // compare the height of the element and the height of the first word\n    return elementHeight - HEIGHT_OFFSET > firstWordHeight;\n\n} // end headlineIsMultipleLines\n\nexports.balanceText = textBalancer;","module.exports = {USE_COVER_HED: false, DOC_URL: \"https:\\u002F\\u002Fdocs.google.com\\u002Fdocument\\u002Fd\\u002F1AgLdhV4XQWQvIuQnSsYyeSLCod_tuzHzb23Bbo0lZfM\\u002Fedit\"};","import enterView from 'enter-view';\nimport textBalancer from 'text-balancer';\n\nimport { USE_COVER_HED } from '../config.yml';\n\n// Fade in navbar at scroll trigger\n\nconst navbar = document.getElementById('navbar');\n\n// Mobile navbar hamburger trigger\n\nexport function hamburgerTrigger() {\n  navbar.classList.toggle('show-nav-links');\n}\n\n// Text balance headline and deck\n\ntextBalancer.balanceText('.headline, .deck, .image-overlay .image-caption');\n\n/* SVG icon stuff\n\nconst svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.29 12.3\"><defs><style>.cls-1{fill:none;stroke:#999;stroke-miterlimit:10;}</style></defs><title>icon-close</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><line class=\"cls-1\" x1=\"0.39\" y1=\"0.32\" x2=\"9.9\" y2=\"11.99\"/><line class=\"cls-1\" x1=\"0.39\" y1=\"11.99\" x2=\"9.9\" y2=\"0.32\"/></g></g></svg>`;\nconst svg64 = window.btoa(svg);\nconsole.log(`url('data:image/svg+xml;base64,${svg64}')`);\n\n*/\n"]}